{"id":"../Interfaces/Views/ViewAnswers.js","dependencies":[{"name":"D:\\SLIIT\\3rd year\\1st Semester\\AF\\project\\AF-Student-Instructor-System\\package.json","includedInParent":true,"mtime":1561311404752}],"generated":{"js":"/*\r\nimport React, {Component} from 'react';\r\nimport NavBar from \"../NavBar\";\r\n\r\nclass ViewAnswers extends Component {\r\n\r\n    constructor(props) {\r\n        super(props),\r\n            this.state = {\r\n                uploadID:\"\",\r\n                uploadedFile:\"\",\r\n                needUpload:\"block\",\r\n                showUploaded:\"none\",\r\n                editUpload:\"none\"\r\n            }\r\n    }\r\n    componentDidMount() {\r\n        fetch('api/resources/student/get_all_assignment').then( data => {\r\n            return data.json();\r\n        }).then( jsonData => {\r\n            jsonData.map(ass => {\r\n                if(ass.assignmentID === this.props.assignmentID && ass.studentID === this.props.studentID){\r\n                    this.setState(\r\n                        {\r\n                            uploadedFile: \"http://localhost:3000/\" + ass.uploadFile.split(\"\\\\\", 2)[1],\r\n                            showUploaded:\"block\",\r\n                            needUpload:\"none\",\r\n                            editUpload:\"none\"\r\n                        })\r\n                }else {\r\n                    this.setState(\r\n                        {\r\n                            uploadedFile: \"\",\r\n                            showUploaded:\"none\",\r\n                            needUpload:\"block\",\r\n                            editUpload:\"none\"\r\n                        })\r\n                }\r\n            })\r\n        }).catch( err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    handlePondFile(error, file) {\r\n        if (error) {\r\n            console.log('Oh no');\r\n            return;\r\n        }\r\n        console.log('File added', file.serverId);\r\n        this.setState({uploadID: file.serverId});\r\n        this.goBack();\r\n        // this.fetchImages()\r\n    }\r\n\r\n    handleEditFile(error, file){\r\n        if(error){\r\n            console.log('Oh no');\r\n            return;\r\n        }\r\n        console.log('File updated', file.serverId);\r\n        this.goBack();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <NavBar/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ViewAnswers;*/"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../Interfaces/Views/ViewAnswers.js","original":{"line":1,"column":0}}],"sources":{"../Interfaces/Views/ViewAnswers.js":"/*\r\nimport React, {Component} from 'react';\r\nimport NavBar from \"../NavBar\";\r\n\r\nclass ViewAnswers extends Component {\r\n\r\n    constructor(props) {\r\n        super(props),\r\n            this.state = {\r\n                uploadID:\"\",\r\n                uploadedFile:\"\",\r\n                needUpload:\"block\",\r\n                showUploaded:\"none\",\r\n                editUpload:\"none\"\r\n            }\r\n    }\r\n    componentDidMount() {\r\n        fetch('api/resources/student/get_all_assignment').then( data => {\r\n            return data.json();\r\n        }).then( jsonData => {\r\n            jsonData.map(ass => {\r\n                if(ass.assignmentID === this.props.assignmentID && ass.studentID === this.props.studentID){\r\n                    this.setState(\r\n                        {\r\n                            uploadedFile: \"http://localhost:3000/\" + ass.uploadFile.split(\"\\\\\", 2)[1],\r\n                            showUploaded:\"block\",\r\n                            needUpload:\"none\",\r\n                            editUpload:\"none\"\r\n                        })\r\n                }else {\r\n                    this.setState(\r\n                        {\r\n                            uploadedFile: \"\",\r\n                            showUploaded:\"none\",\r\n                            needUpload:\"block\",\r\n                            editUpload:\"none\"\r\n                        })\r\n                }\r\n            })\r\n        }).catch( err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    handlePondFile(error, file) {\r\n        if (error) {\r\n            console.log('Oh no');\r\n            return;\r\n        }\r\n        console.log('File added', file.serverId);\r\n        this.setState({uploadID: file.serverId});\r\n        this.goBack();\r\n        // this.fetchImages()\r\n    }\r\n\r\n    handleEditFile(error, file){\r\n        if(error){\r\n            console.log('Oh no');\r\n            return;\r\n        }\r\n        console.log('File updated', file.serverId);\r\n        this.goBack();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <NavBar/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ViewAnswers;*/\r\n"},"lineCount":null}},"error":null,"hash":"9ebd7eae60ec5b8fb4597071d616b663","cacheData":{"env":{}}}